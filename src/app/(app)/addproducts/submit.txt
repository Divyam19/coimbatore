'use client'
import React, { useState } from 'react'
import axios from 'axios'
import {
    Dialog,
    DialogContent,
    DialogDescription,
    DialogHeader,
    DialogTitle,
    DialogTrigger,
} from "@/components/ui/dialog"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'
import { Label } from '@radix-ui/react-dropdown-menu'
import { Input } from '@/components/ui/input'
import { Button } from '@/components/ui/button'
import { useSession } from 'next-auth/react'
import { DialogClose } from '@radix-ui/react-dialog'

const AddProduct = () => {
    const { data: session } = useSession();
    const [formData, setFormData] = useState({
        name: '',
        type: 'not-selected',
        description: '',
        price: '',
    });

    const options = [
        {value:'not-selected',label:'Not-selected'},
        {value:'hydro',label:'Hydro Electricity'},
        {value:'solar',label:'Solar Electricity'},
        {value:'wind',label:'Wind Electricity'},
        {value:'geothermal',label:'Geothermal Energy'},
        {value:'bio',label:'Biomass Energy'},
        {value:'ocean',label:'Ocean Energy'},
        {value:'hydrogen energy',label:'hydrogen Energy'},
    ]

    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
        const { name, value } = e.target;
        setFormData(prevData => ({
            ...prevData,
            [name]: value
        }));
    };

    const onSubmit = async (e: React.FormEvent) => {
        // e.preventDefault();
        try {
            const response = await axios.post('/api/addproduct', {
                ...formData,
                sellerid: session?.user.id,
                email: session?.user.email
            });
            console.log('Product added:', response.data);
            // Handle success (e.g., show a success message, clear form, close dialog)
        } catch (error) {
            console.error('Error adding product:', error);
            // Handle error (e.g., show error message)
        }
    };

    return (
        <Dialog>
            <DialogTrigger className='bg-red-500 hover:bg-red-600 p-2 rounded-xl'>Add Product</DialogTrigger>
            <DialogContent>
                <DialogHeader>
                    <DialogTitle>Add a new Product</DialogTitle>
                    <DialogDescription>
                        <form onSubmit={onSubmit}>
                            <Card>
                                <CardHeader>
                                    <CardTitle>Add Product</CardTitle>
                                    <CardDescription>Add New Product Details</CardDescription>
                                </CardHeader>
                                <CardContent>
                                    <div className='flex flex-col gap-3'>
                                        <div>
                                            <Label>Product Name</Label>
                                            <Input type='text' placeholder='Product name' name='name' required value={formData.name} onChange={handleChange} />
                                        </div>
                                        <div>
                                            <Label>Type</Label>
                                            <select id='energyType' name='type' value={formData.type} onChange={handleChange}>
                                                {options.map((option) => (
                                                    <option key={option.value} value={option.value}>
                                                        {option.label}
                                                    </option>
                                                ))}
                                            </select>
                                        </div>
                                        <div>
                                            <Label>Product description</Label>
                                            <Input type='text' size={50} placeholder='describe your product in less than 50 words' name='description' required value={formData.description} onChange={handleChange} />
                                        </div>
                                        <div>
                                            <Label>Product price</Label>
                                            <Input type='number' size={50} placeholder='Enter product price in INR' required name='price' value={formData.price} onChange={handleChange} />
                                        </div>
                                    </div>
                                </CardContent>
                                <CardFooter>
                                <DialogClose asChild>

                                    <Button type='submit' variant={'outline'}>Submit</Button>
                                </DialogClose>
                                    <Button type='reset' variant={'outline'} onClick={() => setFormData({ name: '', type: 'not-selected', description: '', price: '' })}>
                                        Reset
                                    </Button>
                                </CardFooter>
                            </Card>
                        </form>
                    </DialogDescription>
                </DialogHeader>
            </DialogContent>
        </Dialog>
    )
}

export default AddProduct

{/*
import React from 'react'
import {
    Dialog,
    DialogContent,
    DialogDescription,
    DialogHeader,
    DialogTitle,
    DialogTrigger,
  } from "@/components/ui/dialog"
  import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'
import { Label } from '@radix-ui/react-dropdown-menu'
import { Input } from '@/components/ui/input'
import { getUserAuth } from '@/lib/auth/utils'
import { Button } from '@/components/ui/button'
  
const AddProduct = async () => {
    const options=[
        {value:'not-selected',label:'Not-selected'},
        {value:'hydro',label:'Hydro Electricity'},
        {value:'solar',label:'Solar Electricity'},
        {value:'wind',label:'Wind Electricity'},
        {value:'geothermal',label:'Geothermal Energy'},
        {value:'bio',label:'Biomass Energy'},
        {value:'ocean',label:'Ocean Energy'},
        {value:'hydrogen energy',label:'hydrogen Energy'},
    ]
    const {session}=await getUserAuth();
    const sellerid=session?.user.id;
    const email=session?.user.email
    return (
        
    <Dialog >
        <DialogTrigger className='bg-red-500 hover:bg-red-600 p-2 rounded-xl'>Add Product</DialogTrigger>
        <DialogContent>
            <DialogHeader>
            <DialogTitle>Add a new Product</DialogTitle>
            <DialogDescription>
                <form action={'/api/addproduct'} method='POST'>
                    <Card>
                        <CardHeader>
                            <CardTitle>Add Product</CardTitle>
                            <CardDescription>AddnNew Product Details</CardDescription>
                        </CardHeader>
                        <CardContent>
                            <div className='flex flex-col gap-3'>
                                <div>
                                    <Label>Product Name</Label>
                                    <Input type='text' placeholder='Product name'  name='name' required/>
                                </div>
                                <div>
                                    <Label>Type</Label>
                                    <select id='energyType' name='type'>
                                        {
                                            options.map((option)=>(
                                                <option key={option.value} value={option.value}>
                                                    {option.label}
                                                </option>
                                            ))
                                        }
                                    </select>
                                </div>
                                <div>
                                    <Label>Product description</Label>
                                    <Input type='text' size={50} placeholder='describe your product in less than 50 words' name='description' required />
                                </div>
                                <Input type='hidden' name='sellerid' value={sellerid}/>
                                <Input type='hidden' name='email' value={email}/>
                                <div>
                                    <Label>Product price</Label>
                                    <Input type='number' size={50} placeholder='Enter product price in INR' required name='price'/>
                                </div>
                            </div>
                        </CardContent>
                        <CardFooter>
                            <Button type='submit' variant={'outline'}>Submit</Button>
                            <Button type='reset' variant={'outline'}>
                                Reset
                            </Button>
                        </CardFooter>
                    </Card>
                </form>
            </DialogDescription>
            </DialogHeader>
        </DialogContent>
    </Dialog>

  )
}

export default AddProduct
*/}